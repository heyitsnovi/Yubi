<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Faculty extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Faculty_model');
        $this->load->library('enrollment_library','ion_auth');
         $this->load->model('Level_model');

    if (!$this->ion_auth->in_group(['admin', 'registrar']))
        {
            redirect('auth/login', 'refresh');
        }
    } 

    /*
     * Listing of faculty
     */
    function index()
    {
        $data['faculty'] = $this->Faculty_model->get_all_faculty();
        $data['page_title'] = 'Faculty / Staffs List';
        $data['_view'] = 'faculty/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new faculty
     */
    function add()
    {   
        $this->load->library('form_validation');
        $data['levels'] = $this->Level_model->get_all_levels();
		$this->form_validation->set_rules('first_name','First Name','required|max_length[100]');
		$this->form_validation->set_rules('middle_name','Middle Name','max_length[100]');
		$this->form_validation->set_rules('last_name','Last Name','required|max_length[100]');
		$this->form_validation->set_rules('birthdate','Birthdate','required');
		$this->form_validation->set_rules('address','Address','required|max_length[100]');
		$this->form_validation->set_rules('civil_status','Civil Status','required|max_length[100]');
		$this->form_validation->set_rules('citizenship','Citizenship','required|max_length[100]');
		$this->form_validation->set_rules('gender','Gender','required|max_length[100]');
		$this->form_validation->set_rules('email','Email','required|max_length[100]|valid_email');
		$this->form_validation->set_rules('contact','Contact','required|max_length[100]');
		$this->form_validation->set_rules('role','Role','required|max_length[100]');
        $this->form_validation->set_rules('password','Password','required|min_length[9]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'civil_status' => $this->input->post('civil_status'),
				'role' => $this->input->post('role'),
				'first_name' => $this->input->post('first_name'),
				'middle_name' => $this->input->post('middle_name'),
				'last_name' => $this->input->post('last_name'),
				'birthdate' => $this->input->post('birthdate'),
				'address' => $this->input->post('address'),
				'citizenship' => $this->input->post('citizenship'),
				'gender' => $this->input->post('gender'),
				'email' => $this->input->post('email'),
				'contact' => $this->input->post('contact'),
				'profile' => $this->input->post('profile'),
                'assigned_grade_level'=>$this->input->post('subject_for')
            );
            
            $faculty_id = $this->Faculty_model->add_faculty($params);


                $username = $this->input->post('email');
                $password = $this->input->post('password');
                $email = $this->input->post('email');
                $additional_data = array(
                           'first_name' => $this->input->post('first_name'),
                            'last_name' => $this->input->post('last_name'),
                            'phone'=>$this->input->post('contact'),
                            'company'=>'UBLI',
                            'active'=>1
                            );
                $group = array('5'); // Sets user to student

                 $this->ion_auth->register($username, $password, $email, $additional_data, $group);

                redirect('faculty/index');
        }
        else
        {            
            $data['_view'] = 'faculty/add';
            $data['page_title'] = 'Faculty / Staffs List - Add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a faculty
     */
    function edit($id)
    {   
        // check if the faculty exists before trying to edit it
        $data['faculty'] = $this->Faculty_model->get_faculty($id);
        $data['page_title'] = 'Faculty / Staffs List - Edit';
                $data['levels'] = $this->Level_model->get_all_levels();
          $data['faculty_usertbl_id'] = $this->Faculty_model->get_faculty_id_from_table_users($data['faculty']['email']);
        if(isset($data['faculty']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('first_name','First Name','required|max_length[100]');
			$this->form_validation->set_rules('middle_name','Middle Name','max_length[100]');
			$this->form_validation->set_rules('last_name','Last Name','required|max_length[100]');
			$this->form_validation->set_rules('birthdate','Birthdate','required');
			$this->form_validation->set_rules('address','Address','required|max_length[100]');
			$this->form_validation->set_rules('civil_status','Civil Status','required|max_length[100]');
			$this->form_validation->set_rules('citizenship','Citizenship','required|max_length[100]');
			$this->form_validation->set_rules('gender','Gender','required|max_length[100]');
			$this->form_validation->set_rules('email','Email','required|max_length[100]|valid_email');
			$this->form_validation->set_rules('contact','Contact','required|max_length[100]');
			$this->form_validation->set_rules('role','Role','required|max_length[100]');

            if(strlen($this->input->post('password')) >0){

                $this->form_validation->set_rules('password','Password','trim|min_length[6]');
                $this->form_validation->set_rules('password_confirmation','Password Confirmation','matches[password]');
            }
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'civil_status' => $this->input->post('civil_status'),
					'role' => $this->input->post('role'),
					'first_name' => $this->input->post('first_name'),
					'middle_name' => $this->input->post('middle_name'),
					'last_name' => $this->input->post('last_name'),
					'birthdate' => $this->input->post('birthdate'),
					'address' => $this->input->post('address'),
					'citizenship' => $this->input->post('citizenship'),
					'gender' => $this->input->post('gender'),
					'email' => $this->input->post('email'),
					'contact' => $this->input->post('contact'),
					'profile' => $this->input->post('profile'),
                    'assigned_grade_level'=>$this->input->post('subject_for')
                );

                   if(strlen($this->input->post('password')) >0){


                     if (!$this->ion_auth->email_check($this->input->post('email'))){
                          $group_name = 'teacher';

                             $additional_data = array(
                            'first_name' => $this->input->post('first_name'),
                            'last_name' => $this->input->post('last_name'),
                            'company'=>'UBLI'
                            );

                          $this->ion_auth->register($this->input->post('email'), $this->input->post('password'), strtolower($this->input->post('email')), $additional_data, $group_name);
                    }else{
                         $account_info = array(
                          'first_name' => $this->input->post('first_name'),
                          'last_name' =>$this->input->post('last_name'),
                          'password' =>$this->input->post('password_confirmation')
                           );
                        $this->ion_auth->update($this->input->post('tbluser_faculty_id'), $account_info);
                    }

  
                     
                    }

                $this->Faculty_model->update_faculty($id,$params);            
                $this->session->set_flashdata('message', 'Faculty details updated');
                redirect('faculty/index');
                      
            }
            else
            {
                $data['_view'] = 'faculty/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The faculty you are trying to edit does not exist.');
    }


    function subjects($id){
        
        $data['_view'] = 'faculty/subjects';
        $data['page_title'] = 'Faculty Subjects';
        $data['faculty_id'] = $id;
        $data['loads'] = $this->Faculty_model->get_faculty_subjects($id);
        $this->load->view('layouts/main',$data);
    }

    function faculty_subjects(){

         $user = $this->ion_auth->user()->row();
        $data['_view'] = 'faculty/teacher-personal';
        $data['page_title'] = 'Faculty Subjects';
        $data['faculty_id'] = $user->id;
        $data['loads'] = $this->Faculty_model->get_faculty_subjects($this->Faculty_model->get_faculty_id_by_email($user->email));
        $this->load->view('layouts/main',$data);
    }
}